#! /bin/bash
### BEGIN INIT INFO
# Provides:          ejabberd
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts ejabberd automaticalky at boot 
# Description:       Script for starting pgpool at start up. 
#                    Must be run after PostgreSQL has started.
### END INIT INFO

# Author: Tim Doerzbacher <tim@tim-doerzbacher.com>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="pgpool"
NAME=pgpool
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

SESSION_NAME="PGPOOL"
START_PGPOOL_SCRIPT="/home/blabcake/pgpool2/scripts/start-pgpool"

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	RUNNING="`screen -ls | grep $SESSION_NAME | wc -l`"
	if [ $RUNNING -gt 0 ]; then
		echo "Already started, exiting..."
		exit 1
	fi
	
	echo "Starting pgpool..."
	screen -dmS "$SESSION_NAME" "$START_PGPOOL_SCRIPT"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	echo -n "Shutting down... "
	killall pgpool
}


do_restart()
{
	do_stop
	sleep 2s
	do_start
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	do_stop
	sleep 2s
	do_start	
	return 0
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
 restart|force-reload)
	do_restart
	;;
  status)
	sudo ejabberdctl status
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
